name: Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  regression-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.lock
        pip install pytest pytest-regression pytest-json-report
    
    - name: Create required directories
      run: |
        mkdir -p results figures logs data/raw
    
    - name: Run empirical validation pipeline
      run: |
        python src/iusmorfos_comprehensive_empirical_integration.py
        
    - name: Regression test - Compare results
      run: |
        pytest tests/test_regression.py -v --json-report --json-report-file=test-results.json
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test-results.json
          results/
          figures/
          
    - name: Validate reproducibility
      run: |
        python scripts/validate_reproducibility.py
        
  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t iusmorfos:latest .
        
    - name: Run Docker container
      run: |
        docker run --rm -v $(pwd)/results:/app/results iusmorfos:latest
        
    - name: Validate Docker results
      run: |
        test -f results/iusmorfos_comprehensive_empirical_results_*.json
        echo "Docker execution successful"
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install quality tools
      run: |
        pip install black flake8 mypy bandit safety
        
    - name: Code formatting check
      run: |
        black --check --diff src/ tests/
        
    - name: Linting
      run: |
        flake8 src/ tests/ --max-line-length=100
        
    - name: Type checking
      run: |
        mypy src/ --ignore-missing-imports
        
    - name: Security check
      run: |
        bandit -r src/
        safety check